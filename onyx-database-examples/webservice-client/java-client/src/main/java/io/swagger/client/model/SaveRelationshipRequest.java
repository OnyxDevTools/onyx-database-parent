/*
 * Onyx Persistence API
 * Access your database via Web Services
 *
 * OpenAPI spec version: 2.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * SaveRelationshipRequest
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2017-12-27T19:03:42.962Z")
public class SaveRelationshipRequest {
  @SerializedName("type")
  private String type = null;

  @SerializedName("entity")
  private Object entity = null;

  @SerializedName("relationship")
  private String relationship = null;

  @SerializedName("identifiers")
  private List<Object> identifiers = null;

  public SaveRelationshipRequest type(String type) {
    this.type = type;
    return this;
  }

   /**
   * Type of parent entity to save relationships for.  This contains the entity type&#39;s canonical name.
   * @return type
  **/
  @ApiModelProperty(value = "Type of parent entity to save relationships for.  This contains the entity type's canonical name.")
  public String getType() {
    return type;
  }

  public void setType(String type) {
    this.type = type;
  }

  public SaveRelationshipRequest entity(Object entity) {
    this.entity = entity;
    return this;
  }

   /**
   * Managed Entity
   * @return entity
  **/
  @ApiModelProperty(value = "Managed Entity")
  public Object getEntity() {
    return entity;
  }

  public void setEntity(Object entity) {
    this.entity = entity;
  }

  public SaveRelationshipRequest relationship(String relationship) {
    this.relationship = relationship;
    return this;
  }

   /**
   * Relationship Property Name
   * @return relationship
  **/
  @ApiModelProperty(value = "Relationship Property Name")
  public String getRelationship() {
    return relationship;
  }

  public void setRelationship(String relationship) {
    this.relationship = relationship;
  }

  public SaveRelationshipRequest identifiers(List<Object> identifiers) {
    this.identifiers = identifiers;
    return this;
  }

  public SaveRelationshipRequest addIdentifiersItem(Object identifiersItem) {
    if (this.identifiers == null) {
      this.identifiers = new ArrayList<Object>();
    }
    this.identifiers.add(identifiersItem);
    return this;
  }

   /**
   * Relationship Primary Keys
   * @return identifiers
  **/
  @ApiModelProperty(value = "Relationship Primary Keys")
  public List<Object> getIdentifiers() {
    return identifiers;
  }

  public void setIdentifiers(List<Object> identifiers) {
    this.identifiers = identifiers;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SaveRelationshipRequest saveRelationshipRequest = (SaveRelationshipRequest) o;
    return Objects.equals(this.type, saveRelationshipRequest.type) &&
        Objects.equals(this.entity, saveRelationshipRequest.entity) &&
        Objects.equals(this.relationship, saveRelationshipRequest.relationship) &&
        Objects.equals(this.identifiers, saveRelationshipRequest.identifiers);
  }

  @Override
  public int hashCode() {
    return Objects.hash(type, entity, relationship, identifiers);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SaveRelationshipRequest {\n");
    
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    entity: ").append(toIndentedString(entity)).append("\n");
    sb.append("    relationship: ").append(toIndentedString(relationship)).append("\n");
    sb.append("    identifiers: ").append(toIndentedString(identifiers)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
  
}

